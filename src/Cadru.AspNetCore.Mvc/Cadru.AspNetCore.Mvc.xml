<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cadru.AspNetCore.Mvc</name>
    </assembly>
    <members>
        <member name="T:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions">
            <summary>
            Extension methods that aid in working with ASP.NET Core session state by
            providing a common abstraction layer for <see cref="T:Microsoft.AspNetCore.Http.ISession"></see>,
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"></see>, and <see
            cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"></see>.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)"></see> where the key is the full name of <typeparamref
            name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)"></see> where the key is the full name of <typeparamref
            name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)"></see> where the key is the full name of <typeparamref
            name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary)">
            <summary>
            Gets the value associated with the specified key, without marking
            the key for deletion.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see
            cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)"></see> where the key is
            the full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key, without marking
            the key for deletion.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Http.ISession)">
            <summary>
            Gets the value associated with the key derived from the full name of
            <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)"></see> where the key is the full name of <typeparamref
            name="T"/> and is provided for ease of use when switching between
            different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)"></see> where the key is the full name of <typeparamref
            name="T"/> and is provided for ease of use when switching between
            different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Gets the value associated with the key derived from the full name of
            <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)"></see> where the key is the full name of <typeparamref
            name="T"/> and is provided for ease of use when switching between
            different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)"></see> and is provided for ease of use when switching
            between different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>
            The value is stored as a JSON serialized string.
            </para>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0)"></see> where the key is the full name of <typeparamref
            name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key to associate with the stored value.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>
            The value is stored as a JSON serialized string.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Http.ISession,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>
            The value is stored as a JSON serialized string.
            </para>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)"></see> where the key is the full name of <typeparamref
            name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key to associate with the stored value.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>
            The value is stored as a JSON serialized string.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>
            The value is stored as a JSON serialized string.
            </para>
            <para>
            This is equivalent to calling <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0)"></see> where the key is the full name of <typeparamref
            name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key to associate with the stored value.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>
            The value is stored as a JSON serialized string.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the value parameter. This parameter is passed
            uninitialized.</param>
            <returns><see langword="true"></see> if the <paramref
            name="storageProvider"/> contains an element with the specified key;
            otherwise, <see langword="false"></see>.</returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Http.ISession,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the value parameter. This parameter is passed
            uninitialized.</param>
            <returns><see langword="true"></see> if the <paramref
            name="storageProvider"/> contains an element with the specified key;
            otherwise, <see langword="false"></see>.</returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the value parameter. This parameter is passed
            uninitialized.</param>
            <returns><see langword="true"></see> if the <paramref
            name="storageProvider"/> contains an element with the specified key;
            otherwise, <see langword="false"></see>.</returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryPeekValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key, without marking
            the key for deletion.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the value parameter. This parameter is passed
            uninitialized.</param>
            <returns><see langword="true"></see> if the <paramref
            name="storageProvider"/> contains an element with the specified key;
            otherwise, <see langword="false"></see>.</returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryPeekValue``1(Microsoft.AspNetCore.Http.ISession,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the value parameter. This parameter is passed
            uninitialized.</param>
            <returns><see langword="true"></see> if the <paramref
            name="storageProvider"/> contains an element with the specified key;
            otherwise, <see langword="false"></see>.</returns>
            <remarks>
            This method is equivalent to calling <see
            cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Http.ISession,System.String,``0@)"></see> and is
            provided for ease of use when switching between different storage
            providers.
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryPeekValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage
            provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated
            with the specified key, if the key is found; otherwise, the default
            value for the type of the value parameter. This parameter is passed
            uninitialized.</param>
            <returns><see langword="true"></see> if the <paramref
            name="storageProvider"/> contains an element with the specified key;
            otherwise, <see langword="false"></see>.</returns>
            <remarks>
            This method is equivalent to calling <see
            cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0@)"></see> and
            is provided for ease of use when switching between different storage
            providers.
            </remarks>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute">
            <summary>
            Provides a class that implements the <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware"/>
            interface in order to support additional metadata.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute"/> class.
            </summary>
            <param name="name">The name of the model metadata.</param>
            <param name="value">The value of the model metadata.</param>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.Key">
            <inheritdoc/>
            <remarks>This property is not used by the <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute"/>.</remarks>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.Name">
            <summary>
            Gets the name of the additional metadata attribute.
            </summary>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.Value">
            <summary>
            Gets the value of the of the additional metadata attribute.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.OnMetadataCreated(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware">
            <summary>
            Provides an interface for exposing attributes to the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext"/> class.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware.OnMetadataCreated(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <summary>
            Provides metadata to the model metadata creation process.
            </summary>
            <param name="context">The display metadata context</param>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareAttribute">
            <summary>
            Represents the base class for attributes which implement the <see
            cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware"/> interface in order to support additional
            metadata.
            </summary>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareAttribute.Key">
            <summary>
            The key used to reference this attribute in the <see
            cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues"/> dictionary.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareAttribute.OnMetadataCreated(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider">
            <summary>
            A provider to insert additional metadata into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/>.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider"/> class.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider.CreateDisplayMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.Razor.LayoutViewLocationExpander">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander"/> that adds a Layout folder as a prefix to view names.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Razor.LayoutViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Razor.LayoutViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.Rendering.HtmlHelperExtensions">
            <summary>
            Extensions for working with <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> in Razor files.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Rendering.HtmlHelperExtensions.GetEnumSelectList``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Rendering.HtmlHelperExtensions.GetEnumSelectList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Type,System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
