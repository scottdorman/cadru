<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cadru.AspNetCore.Mvc</name>
    </assembly>
    <members>
        <member name="T:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions">
            <summary>
            Extension methods that aid in working with ASP.NET Core session state by
            providing a common abstraction layer for <see cref="T:Microsoft.AspNetCore.Http.ISession"></see>,
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"></see>, and <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"></see>.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)"></see> where the key
            is the full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)"></see> where the key is the
            full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)"></see> where the key
            is the full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary)">
            <summary>
            Gets the value associated with the specified key, without marking
            the key for deletion.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)"></see> where the
            key is the full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key, without marking
            the key for deletion.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Http.ISession)">
            <summary>
            Gets the value associated with the key derived from the full name of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)"></see> where the key is the
            full name of <typeparamref name="T"/> and is provided for ease of
            use when switching between different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)"></see> where the key is the
            full name of <typeparamref name="T"/> and is provided for ease of
            use when switching between different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Gets the value associated with the key derived from the full name of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)"></see> where the key
            is the full name of <typeparamref name="T"/> and is provided for
            ease of use when switching between different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Peek``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <returns>
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter.
            </returns>
            <remarks>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Get``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)"></see> and is
            provided for ease of use when switching between different storage providers.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>The value is stored as a JSON serialized string.</para>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0)"></see> where the
            key is the full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key to associate with the stored value.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>The value is stored as a JSON serialized string.</para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Http.ISession,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>The value is stored as a JSON serialized string.</para>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)"></see> where the key is the
            full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key to associate with the stored value.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>The value is stored as a JSON serialized string.</para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>The value is stored as a JSON serialized string.</para>
            <para>
            This is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0)"></see> where the
            key is the full name of <typeparamref name="T"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.Put``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0)">
            <summary>
            Adds the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key to associate with the stored value.</param>
            <param name="value">The value to store.</param>
            <remarks>
            <para>The value is stored as a JSON serialized string.</para>
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <see langword="true"></see> if the
            <paramref name="storageProvider"/> contains an element with the
            specified key; otherwise, <see langword="false"></see>.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Http.ISession,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <see langword="true"></see> if the
            <paramref name="storageProvider"/> contains an element with the
            specified key; otherwise, <see langword="false"></see>.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <see langword="true"></see> if the
            <paramref name="storageProvider"/> contains an element with the
            specified key; otherwise, <see langword="false"></see>.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryPeekValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key, without marking
            the key for deletion.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <see langword="true"></see> if the
            <paramref name="storageProvider"/> contains an element with the
            specified key; otherwise, <see langword="false"></see>.
            </returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryPeekValue``1(Microsoft.AspNetCore.Http.ISession,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <see langword="true"></see> if the
            <paramref name="storageProvider"/> contains an element with the
            specified key; otherwise, <see langword="false"></see>.
            </returns>
            <remarks>
            This method is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Http.ISession,System.String,``0@)"></see> and is
            provided for ease of use when switching between different storage providers.
            </remarks>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryPeekValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storageProvider">The underlying storage provider.</param>
            <param name="key">The key whose value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified
            key, if the key is found; otherwise, the default value for the type
            of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <see langword="true"></see> if the
            <paramref name="storageProvider"/> contains an element with the
            specified key; otherwise, <see langword="false"></see>.
            </returns>
            <remarks>
            This method is equivalent to calling
            <see cref="M:Cadru.AspNetCore.Mvc.Extensions.StateManagementExtensions.TryGetValue``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String,``0@)"></see>
            and is provided for ease of use when switching between different
            storage providers.
            </remarks>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute">
            <summary>
            Provides a class that implements the <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware"/>
            interface in order to support additional metadata.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute"/> class.
            </summary>
            <param name="name">The name of the model metadata.</param>
            <param name="value">The value of the model metadata.</param>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.Key">
            <inheritdoc/>
            <remarks>This property is not used by the <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute"/>.</remarks>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.Name">
            <summary>
            Gets the name of the additional metadata attribute.
            </summary>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.Value">
            <summary>
            Gets the value of the of the additional metadata attribute.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.AdditionalMetadataAttribute.OnMetadataCreated(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware">
            <summary>
            Provides an interface for exposing attributes to the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext"/> class.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware.OnMetadataCreated(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <summary>
            Provides metadata to the model metadata creation process.
            </summary>
            <param name="context">The display metadata context</param>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareAttribute">
            <summary>
            Represents the base class for attributes which implement the
            <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataAware"/> interface in order to support additional metadata.
            </summary>
        </member>
        <member name="P:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareAttribute.Key">
            <summary>
            The key used to reference this attribute in the
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues"/> dictionary.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareAttribute.OnMetadataCreated(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider">
            <summary>
            A provider to insert additional metadata into the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/>.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider"/> class.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.ModelBinding.Metadata.MetadataAwareProvider.CreateDisplayMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.Razor.LayoutViewLocationExpander">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Razor.IViewLocationExpander"/> that adds a Layout folder as a
            prefix to view names.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Razor.LayoutViewLocationExpander.ExpandViewLocations(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Razor.LayoutViewLocationExpander.PopulateValues(Microsoft.AspNetCore.Mvc.Razor.ViewLocationExpanderContext)">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.AspNetCore.Mvc.Rendering.HtmlHelperExtensions">
            <summary>
            Extensions for working with <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> in Razor files.
            </summary>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Rendering.HtmlHelperExtensions.GetEnumSelectList``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns a select list for the given type.
            </summary>
            <typeparam name="TEnum">The enumeration type.</typeparam>
            <param name="htmlHelper">An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance.</param>
            <param name="uiHint">The value of a <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute"/> used to filter the enumeration.</param>
            <returns></returns>
        </member>
        <member name="M:Cadru.AspNetCore.Mvc.Rendering.HtmlHelperExtensions.GetEnumSelectList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Type,System.String)">
            <summary>
            Returns a select list for the given type.
            </summary>
            <param name="enumType">The enumeration type.</param>
            <param name="htmlHelper">An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance.</param>
            <param name="uiHint">The value of a <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute"/> used to filter the enumeration.</param>
            <returns></returns>
        </member>
    </members>
</doc>
System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is allowed as an input even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.AllowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is disallowed as an input even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DisallowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
                Specifies that a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute.#ctor">
             <summary>
                 Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute"/> class.
             </summary>
            
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
                Specifies that the method will not return if the associated <see cref="T:System.Boolean"/>
                parameter is passed the specified value.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
                Gets the condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute"/>
                class with the specified parameter value.
            </summary>
            <param name="parameterValue">
                The condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
                Specifies that an output may be <see langword="null"/> even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, 
                the parameter may be <see langword="null"/> even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                 Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
                Specifies that the method or property will ensure that the listed field and property members have
                not-<see langword="null"/> values.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
                Gets field or property member names.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with a field or property member.
            </summary>
            <param name="member">
                The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
                Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">
                The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
                Specifies that the method or property will ensure that the listed field and property members have
                non-<see langword="null"/> values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
                Gets field or property member names.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
                Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">
                The return value condition. If the method returns this value,
                the associated parameter will not be <see langword="null"/>.
            </param>
            <param name="member">
                The field or property member that is promised to be not-<see langword="null"/>.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
                Initializes the attribute with the specified return value condition and list
                of field and property members.
            </summary>
            <param name="returnValue">
                The return value condition. If the method returns this value,
                the associated parameter will not be <see langword="null"/>.
            </param>
            <param name="members">
                The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
                Specifies that an output is not <see langword="null"/> even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
                Specifies that the output will be non-<see langword="null"/> if the
                named parameter is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
                Gets the associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">
                The associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>,
                the parameter will not be <see langword="null"/> even if the corresponding type allows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </param>
        </member>
    </members>
</doc>
