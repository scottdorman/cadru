<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cadru.Data.Annotations</name>
    </assembly>
    <members>
        <member name="T:Cadru.Data.Annotations.ExportableAttribute">
            <summary>
            Denotes that a property should be excluded from being exported.
            </summary>
        </member>
        <member name="F:Cadru.Data.Annotations.ExportableAttribute.DefaultOrder">
            <summary>
            The default export order
            </summary>
        </member>
        <member name="M:Cadru.Data.Annotations.ExportableAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Cadru.Data.Annotations.ExportableAttribute"/> class.
            </summary>
            <param name="allowExport">
            <see langword="true"/> to specify that the field is exportable;
            otherwise, <see langword="false"/>.
            </param>
        </member>
        <member name="P:Cadru.Data.Annotations.ExportableAttribute.AllowExport">
            <summary>
            Gets a value that indicates whether a field is exportable.
            </summary>
            <value>
            <see langword="true"/> if the field is exportable; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Cadru.Data.Annotations.ExportableAttribute.Order">
            <summary>
            Gets or sets the order weight of the column.
            </summary>
            <remarks>
            Columns are sorted in increasing order based on the order value.
            Columns without this attribute have an order value of 0. Negative
            values are valid and can be used to position a column before all
            non-negative columns. If an order is not specified, presentation
            layers should consider using the value 10000. This value lets
            explicitly-ordered fields be displayed before and after the fields
            that do not have a specified order.
            </remarks>
        </member>
        <member name="T:Cadru.Data.Annotations.ExtendedPropertyAttribute">
            <summary>
            Specifies additional attributes about a class, as a name/value pair.
            </summary>
        </member>
        <member name="M:Cadru.Data.Annotations.ExtendedPropertyAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Cadru.Data.Annotations.ExtendedPropertyAttribute"/> class.
            </summary>
            <param name="name">The name of the extended property.</param>
            <param name="value">The value of the extended property.</param>
        </member>
        <member name="P:Cadru.Data.Annotations.ExtendedPropertyAttribute.Name">
            <summary>
            The name of the extended property.
            </summary>
        </member>
        <member name="P:Cadru.Data.Annotations.ExtendedPropertyAttribute.Value">
            <summary>
            The value of the extended property.
            </summary>
        </member>
        <member name="T:Cadru.Data.Annotations.StringHandlingAttribute">
            <summary>
            Specifies how string values should be handled.
            </summary>
        </member>
        <member name="M:Cadru.Data.Annotations.StringHandlingAttribute.#ctor(Cadru.Data.Annotations.StringHandlingOption)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Cadru.Data.Annotations.StringHandlingAttribute"/> class.
            </summary>
            <param name="stringHandlingOption">The string handling option.</param>
        </member>
        <member name="P:Cadru.Data.Annotations.StringHandlingAttribute.StringHandlingOption">
            <summary>
            Gets the option for handling string values.
            </summary>
            <value>The string handling option.</value>
        </member>
        <member name="T:Cadru.Data.Annotations.StringHandlingOption">
            <summary>
            Represents the string handling option.
            </summary>
        </member>
        <member name="F:Cadru.Data.Annotations.StringHandlingOption.None">
            <summary>
            The string value should not be modified.
            </summary>
        </member>
        <member name="F:Cadru.Data.Annotations.StringHandlingOption.Trim">
            <summary>
            The string value should be trimmed to remove leading and trailing spaces.
            </summary>
        </member>
        <member name="F:Cadru.Data.Annotations.StringHandlingOption.Truncate">
            <summary>
            The string value should be truncated.
            </summary>
        </member>
        <member name="T:Cadru.Data.Annotations.ViewAttribute">
            <summary>
            Specifies the database view that a class is mapped to.
            </summary>
        </member>
        <member name="M:Cadru.Data.Annotations.ViewAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cadru.Data.Annotations.ViewAttribute"/> class.
            </summary>
            <param name="name">The name of the view the class is mapped to.</param>
        </member>
        <member name="P:Cadru.Data.Annotations.ViewAttribute.Name">
            <summary>
            The name of the view the class is mapped to.
            </summary>
        </member>
        <member name="P:Cadru.Data.Annotations.ViewAttribute.Schema">
            <summary>
            The schema of the view the class is mapped to.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is allowed as an input even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.AllowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is disallowed as an input even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DisallowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
                Specifies that a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute.#ctor">
             <summary>
                 Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute"/> class.
             </summary>
            
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
                Specifies that the method will not return if the associated <see cref="T:System.Boolean"/>
                parameter is passed the specified value.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
                Gets the condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute"/>
                class with the specified parameter value.
            </summary>
            <param name="parameterValue">
                The condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
                Specifies that an output may be <see langword="null"/> even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, 
                the parameter may be <see langword="null"/> even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                 Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
                Specifies that the method or property will ensure that the listed field and property members have
                not-<see langword="null"/> values.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
                Gets field or property member names.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with a field or property member.
            </summary>
            <param name="member">
                The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
                Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">
                The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
                Specifies that the method or property will ensure that the listed field and property members have
                non-<see langword="null"/> values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
                Gets field or property member names.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
                Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">
                The return value condition. If the method returns this value,
                the associated parameter will not be <see langword="null"/>.
            </param>
            <param name="member">
                The field or property member that is promised to be not-<see langword="null"/>.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
                Initializes the attribute with the specified return value condition and list
                of field and property members.
            </summary>
            <param name="returnValue">
                The return value condition. If the method returns this value,
                the associated parameter will not be <see langword="null"/>.
            </param>
            <param name="members">
                The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
                Specifies that an output is not <see langword="null"/> even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
                Specifies that the output will be non-<see langword="null"/> if the
                named parameter is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
                Gets the associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">
                The associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>,
                the parameter will not be <see langword="null"/> even if the corresponding type allows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </param>
        </member>
    </members>
</doc>
