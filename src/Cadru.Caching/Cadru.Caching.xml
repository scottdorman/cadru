<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cadru.Caching</name>
    </assembly>
    <members>
        <member name="T:Cadru.Caching.CacheKey">
            <summary>
            An object which can be used as a key for caching.
            </summary>
        </member>
        <member name="M:Cadru.Caching.CacheKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cadru.Caching.CacheKey"/> class using
            the specified <paramref name="prefix"/> value.
            </summary>
            <param name="prefix">The value used as the cache key prefix.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="prefix"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="prefix"/> is a zero-length string.
            </exception>
        </member>
        <member name="M:Cadru.Caching.CacheKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Cadru.Caching.CacheKey"/> class using
            the specified <paramref name="prefix"/> value and the values in
            <paramref name="data"/> to form the key.
            </summary>
            <param name="prefix">The value used as the cache key prefix.</param>
            <param name="data">Additional values used to form the key.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="prefix"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="prefix"/> is a zero-length string.
            </exception>
        </member>
        <member name="P:Cadru.Caching.CacheKey.CancellationToken">
            <summary>
            Gets or sets a <see cref="T:System.Threading.CancellationTokenSource"/> that can be
            used to invalidate the key.
            </summary>
        </member>
        <member name="P:Cadru.Caching.CacheKey.Key">
            <summary>
            Gets the value of the cache key.
            </summary>
        </member>
        <member name="M:Cadru.Caching.CacheKey.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Cadru.Caching.CacheKey.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Cadru.Caching.CacheKey.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Cadru.Caching.CacheKeys">
            <summary>
            Represents a set of <see cref="T:Cadru.Caching.CacheKey"/> instances.
            </summary>
        </member>
        <member name="P:Cadru.Caching.CacheKeys.Count">
            <summary>
            Gets the number of cache key elements in the set.
            </summary>
            <remarks>The number of elements that are contained in the set.</remarks>
        </member>
        <member name="P:Cadru.Caching.CacheKeys.Keys">
            <summary>
            The set of cache key elements.
            </summary>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.Add(System.String,System.Object[])">
            <summary>
            Adds a new <see cref="T:Cadru.Caching.CacheKey"/> instance to the set.
            </summary>
            <param name="prefix">The value used as the cache key prefix.</param>
            <param name="data">Additional values used to form the key.</param>
            <returns>
            The <see cref="T:Cadru.Caching.CacheKey"/> instance if it was added to the set;
            otherwise <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.Add(System.String)">
            <summary>
            Adds the specified cache key to the set.
            </summary>
            <param name="prefix">The value used as the cache key prefix.</param>
            <returns>
            The <see cref="T:Cadru.Caching.CacheKey"/> instance if it was added to the set;
            otherwise <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.Add(Cadru.Caching.CacheKey)">
            <summary>
            Adds the specified cache key to the set.
            </summary>
            <param name="item">The <see cref="T:Cadru.Caching.CacheKey"/> to add to the set.</param>
            <returns>
            The <see cref="T:Cadru.Caching.CacheKey"/> instance if it was added to the set;
            otherwise <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.Clear">
            <summary>
            Removes all cache key elements from the set.
            </summary>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.Contains(Cadru.Caching.CacheKey)">
            <summary>
            Determines whether the set contains the specified cache key.
            </summary>
            <param name="item">The <see cref="T:Cadru.Caching.CacheKey"/> to locate.</param>
            <returns>
            <see langword="true"/> if the set contains the specified key;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.Remove(Cadru.Caching.CacheKey)">
            <summary>
            Removes the specified cache key.
            </summary>
            <param name="item">&gt;The <see cref="T:Cadru.Caching.CacheKey"/> to remove.</param>
            <returns>
            <see langword="true"/> if the cache key is successfully found and
            removed; otherwise <see langword="false"/>. This method returns
            <see langword="false"/> if <paramref name="item"/> is not found.
            </returns>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.RemoveWhere(System.Predicate{Cadru.Caching.CacheKey})">
            <summary>
            Removes all cache keys that match the conditions defined by the
            specified predicate.
            </summary>
            <param name="match">
            The <see cref="T:System.Predicate`1"/> delegate that defines the conditions
            of the cache keys to remove.
            </param>
            <returns>The number of cache keys that were removed.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="match"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Cadru.Caching.CacheKeys.TrimExcess">
            <summary>
            Sets the capacity to the actual number of elements contained,
            rounded up to a nearby value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is allowed as an input even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.AllowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is disallowed as an input even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DisallowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
                Specifies that a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute.#ctor">
             <summary>
                 Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute"/> class.
             </summary>
            
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
                Specifies that the method will not return if the associated <see cref="T:System.Boolean"/>
                parameter is passed the specified value.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
                Gets the condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute"/>
                class with the specified parameter value.
            </summary>
            <param name="parameterValue">
                The condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
                Specifies that an output may be <see langword="null"/> even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, 
                the parameter may be <see langword="null"/> even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                 Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
                Specifies that the method or property will ensure that the listed field and property members have
                not-<see langword="null"/> values.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
                Gets field or property member names.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with a field or property member.
            </summary>
            <param name="member">
                The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
                Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">
                The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
                Specifies that the method or property will ensure that the listed field and property members have
                non-<see langword="null"/> values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
                Gets field or property member names.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
                Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">
                The return value condition. If the method returns this value,
                the associated parameter will not be <see langword="null"/>.
            </param>
            <param name="member">
                The field or property member that is promised to be not-<see langword="null"/>.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
                Initializes the attribute with the specified return value condition and list
                of field and property members.
            </summary>
            <param name="returnValue">
                The return value condition. If the method returns this value,
                the associated parameter will not be <see langword="null"/>.
            </param>
            <param name="members">
                The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
                Specifies that an output is not <see langword="null"/> even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
                Specifies that the output will be non-<see langword="null"/> if the
                named parameter is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
                Gets the associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">
                The associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>,
                the parameter will not be <see langword="null"/> even if the corresponding type allows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </param>
        </member>
    </members>
</doc>
