//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cadru.Contracts.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cadru.Contracts.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal enum value: {0}..
        /// </summary>
        internal static string Argument_EnumIllegalVal {
            get {
                return ResourceManager.GetString("Argument_EnumIllegalVal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not valid for this usage of the type {1}..
        /// </summary>
        internal static string Argument_InvalidEnumValue {
            get {
                return ResourceManager.GetString("Argument_InvalidEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of flags is invalid..
        /// </summary>
        internal static string Argument_InvalidFlag {
            get {
                return ResourceManager.GetString("Argument_InvalidFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The starting index and ending index refer to the same location in the string..
        /// </summary>
        internal static string Argument_InvalidIndexValuesString {
            get {
                return ResourceManager.GetString("Argument_InvalidIndexValuesString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot contain a null (Nothing in Visual Basic) element..
        /// </summary>
        internal static string Argument_NullElement {
            get {
                return ResourceManager.GetString("Argument_NullElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The starting index refers to a location that is after the ending index..
        /// </summary>
        internal static string Argument_StartIndexGreaterThanEndIndex {
            get {
                return ResourceManager.GetString("Argument_StartIndexGreaterThanEndIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The starting index refers to a location in the string that is after the ending index..
        /// </summary>
        internal static string Argument_StartIndexGreaterThanEndIndexString {
            get {
                return ResourceManager.GetString("Argument_StartIndexGreaterThanEndIndexString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String cannot be of zero length..
        /// </summary>
        internal static string Argument_StringZeroLength {
            get {
                return ResourceManager.GetString("Argument_StringZeroLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied UnixTimestamp represents an invalid time.  For example, when the clock is adjusted forward, any time in the period that is skipped is invalid..
        /// </summary>
        internal static string Argument_UnixTimestampIsInvalid {
            get {
                return ResourceManager.GetString("Argument_UnixTimestampIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be an empty string..
        /// </summary>
        internal static string ArgumentException_EmptyString {
            get {
                return ResourceManager.GetString("ArgumentException_EmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type provided must be an Enum..
        /// </summary>
        internal static string ArgumentExceptionMustBeEnum {
            get {
                return ResourceManager.GetString("ArgumentExceptionMustBeEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String reference not set to an instance of a String..
        /// </summary>
        internal static string ArgumentNull_String {
            get {
                return ResourceManager.GetString("ArgumentNull_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index must be less than the length of string..
        /// </summary>
        internal static string ArgumentOutOfRange_IndexLessThanLength {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_IndexLessThanLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index must be non-negative..
        /// </summary>
        internal static string ArgumentOutOfRange_IndexLessThanZero {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_IndexLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index was out of range. Must be non-negative and less than the length of the string..
        /// </summary>
        internal static string ArgumentOutOfRange_IndexString {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_IndexString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid values are between {0} and {1}..
        /// </summary>
        internal static string ArgumentOutOfRange_Range {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid values are between {0} and {1}, inclusive..
        /// </summary>
        internal static string ArgumentOutOfRange_RangeInclusive {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_RangeInclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upper bound must be greater than the lower bound ..
        /// </summary>
        internal static string ArgumentOutOfRange_UpperBound {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_UpperBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assumption failed..
        /// </summary>
        internal static string AssumptionException_EmptyMessage {
            get {
                return ResourceManager.GetString("AssumptionException_EmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assumption failed. {0}.
        /// </summary>
        internal static string AssumptionException_Message {
            get {
                return ResourceManager.GetString("AssumptionException_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} member must be overridden by a derived class..
        /// </summary>
        internal static string NotImplemented_NotOverriddenByDerived {
            get {
                return ResourceManager.GetString("NotImplemented_NotOverriddenByDerived", resourceCulture);
            }
        }
    }
}
